// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using OpenWeatherServicesApp.Services;
using Pomelo.EntityFrameworkCore.MySql.Scaffolding.Internal;

namespace OpenWeatherServicesApp.DBModels;

public partial class WeatherDBContext : DbContext
{
    static mainClass _main = new mainClass();
    public WeatherDBContext()
    {
    }

    public WeatherDBContext(DbContextOptions<WeatherDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Countrieslist> Countrieslists { get; set; }

    public virtual DbSet<Unitsystem> Unitsystems { get; set; }

    public virtual DbSet<Unitsystemsymbol> Unitsystemsymbols { get; set; }

    public virtual DbSet<Weatherpolishdescription> Weatherpolishdescriptions { get; set; }

    IConfiguration JsonData { get; init; } = new ConfigurationBuilder().AddJsonFile(_main.connectionStringPath).Build();
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseMySql(JsonData[_main.connectionStringJson], Microsoft.EntityFrameworkCore.ServerVersion.Parse("8.0.40-mysql"));

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_0900_ai_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<Countrieslist>(entity =>
        {
            entity.HasKey(e => e.CountriesId).HasName("PRIMARY");

            entity.ToTable("countrieslist");

            entity.Property(e => e.CountriesId).HasColumnName("countriesId");
            entity.Property(e => e.CountriesFullName)
                .HasMaxLength(100)
                .HasColumnName("countriesFullName");
            entity.Property(e => e.CountriesSymbol)
                .IsRequired()
                .HasMaxLength(5)
                .HasColumnName("countriesSymbol");
        });

        modelBuilder.Entity<Unitsystem>(entity =>
        {
            entity.HasKey(e => e.UnitSystemId).HasName("PRIMARY");

            entity.ToTable("unitsystems");

            entity.Property(e => e.UnitSystemId).HasColumnName("unitSystemId");
            entity.Property(e => e.UnitSystemValue)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("unitSystemValue");
        });

        modelBuilder.Entity<Unitsystemsymbol>(entity =>
        {
            entity.HasKey(e => e.UnitSystemSymbolsId).HasName("PRIMARY");

            entity.ToTable("unitsystemsymbols");

            entity.HasIndex(e => e.UnitSystemId, "unitsystemsymbols_unitsystems_FK");

            entity.Property(e => e.UnitSystemSymbolsId).HasColumnName("unitSystemSymbolsId");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.UnitSystemId).HasColumnName("unitSystemId");
            entity.Property(e => e.UnitSystemSymbol1)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("unitSystemSymbol");
        });

        modelBuilder.Entity<Weatherpolishdescription>(entity =>
        {
            entity.HasKey(e => e.WeatherId).HasName("PRIMARY");

            entity.ToTable("weatherpolishdescription");

            entity.Property(e => e.EngDesc)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.PolDesc)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}